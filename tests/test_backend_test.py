"""
    Tests the test backend
"""

from pybliotecario.backend import TestUtil


def test_get_updates(tmpfile):
    """Checks that get updates returns messages
    with the input message inside
    tmp_path is a pathlib Path object automatically generated by pytest
    """
    fake_msg = ["This is a fake msg"]
    test_util = TestUtil(tmpfile, fake_msgs=fake_msg)
    updates = test_util.get_updates()
    # Check that indeed the update contains only the given message
    assert len(updates) == len(fake_msg)
    for update, msg in zip(updates, fake_msg):
        assert update["message"]["text"] == msg


def test_is_msg_in_file(tmpfile):
    """Check that the utlity to check for a msg in the
    communication file is working"""
    msg = "This is only a test"
    test_util = TestUtil(tmpfile)
    tmpfile.write_text(msg)
    assert test_util.is_msg_in_file(msg)
    assert not test_util.is_msg_in_file("Something different")


def test_send_msg(tmpfile):
    """Checks that upon sending a message it gets written to the
    given file"""
    test_util = TestUtil(tmpfile)
    msg = "Hola, caracola"
    # test util does not take a chat id for now
    test_util.send_message(msg, None)
    assert test_util.is_msg_in_file(msg)
